const t=window.NbComponent.h;class e{constructor(){this.zIndex=2}async getStartFixedScrollTop(){return this.startFixedScrollTop}onCurrentPageChange(t){t&&(this.startFixedScrollTop=this.target.scrollTop),this.change.emit({isFixed:t})}async isFixed(){return this.fixed}handleFix(){const t=this.el.getBoundingClientRect().top,e=this.target.getBoundingClientRect().top;this.offset>=0&&(this.fixed=t-e<=this.offset)}get fixedTop(){return this.target?this.target.getBoundingClientRect().top+this.offset:this.el.getBoundingClientRect().top}componentDidLoad(){try{setTimeout(()=>{this.target=this.relativeSelector?document.querySelector(this.relativeSelector):document.body,this.target.addEventListener("scroll",this.handleFix.bind(this),!1)},10)}catch(t){throw new TypeError(t)}}componentDidUnload(){this.target&&this.target.removeEventListener("scroll",this.handleFix.bind(this),!1)}render(){return t("div",{style:{position:this.fixed?"fixed":"relative",top:this.fixed?`${this.fixedTop}px`:"auto",zIndex:String(this.zIndex)}},t("slot",null))}static get is(){return"nb-affix"}static get encapsulation(){return"shadow"}static get properties(){return{el:{elementRef:!0},fixed:{state:!0,watchCallbacks:["onCurrentPageChange"]},getStartFixedScrollTop:{method:!0},isFixed:{method:!0},offset:{type:Number,attr:"offset"},relativeSelector:{type:String,attr:"relative-selector"},zIndex:{type:Number,attr:"z-index"}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}}export{e as NbAffix};
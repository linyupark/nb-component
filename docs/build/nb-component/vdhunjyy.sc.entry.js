const t=window.NbComponent.h;class e{constructor(){this.targetDom=(()=>document.body)}onCurrentPageChange(t){this.change.emit({isFixed:t})}handleFix(){if(this.offset>=0){const t=this.el.getBoundingClientRect().top;this.fixed=t<=this.offset}}componentDidLoad(){try{this.handleFix(),setTimeout(()=>{this.targetDom().addEventListener("scroll",this.handleFix.bind(this),!1)},10)}catch(t){throw new TypeError(t)}}componentDidUnload(){this.targetDom().removeEventListener("scroll",this.handleFix.bind(this),!1)}render(){return t("div",{style:{position:this.fixed?"fixed":"relative",top:this.fixed?`${this.offset}px`:"auto"}},t("slot",null))}static get is(){return"nb-affix"}static get encapsulation(){return"shadow"}static get properties(){return{el:{elementRef:!0},fixed:{state:!0,watchCallbacks:["onCurrentPageChange"]},offset:{type:Number,attr:"offset"},targetDom:{type:"Any",attr:"target-dom"}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}}export{e as NbAffix};
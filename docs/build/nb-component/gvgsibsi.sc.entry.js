const t=window.NbComponent.h;class e{constructor(){this.toTarget=(()=>document)}onCurrentPageChange(t){this.change.emit({isFixed:t})}handleFix(){if(this.offset>=0){const t=this.el.getBoundingClientRect().top;this.fixed=t<=this.offset}}componentDidLoad(){try{this.handleFix(),setTimeout(()=>{this.toTarget().addEventListener("scroll",this.handleFix.bind(this),!1)},100)}catch(t){throw new TypeError('"toTarget" props maybe not a valid scroll dom.')}}async componentDidUnload(){this.toTarget().removeEventListener("scroll",this.handleFix.bind(this),!1)}render(){return t("div",{class:`${this.fixed?"fixed":"nofixed"}`,style:{top:this.fixed?`${this.offset}px`:"auto"}},t("slot",null))}static get is(){return"nb-affix"}static get properties(){return{el:{elementRef:!0},fixed:{state:!0,watchCallbacks:["onCurrentPageChange"]},offset:{type:Number,attr:"offset"},toTarget:{type:"Any",attr:"to-target"}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return".nofixed{position:relative}.fixed{position:fixed}"}}export{e as NbAffix};